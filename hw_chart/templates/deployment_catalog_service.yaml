apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-service
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      {{- include "hw_chart.catalogSelectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "hw_chart.catalogSelectorLabels" . | nindent 8 }}
    spec:
      containers:
        - image: {{ .Values.image_catalog_service.repository }}
          name: {{ .Chart.Name }}
          ports:
            - containerPort: 8000
          imagePullPolicy: Always
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: volodina-hw-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: volodina-hw-secret
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: volodina-hw-secret
                  key: DB_NAME
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: volodina-hw-secret
                  key: DB_HOST
            - name: RABBIT_HOST
              value: 'otus-hw-rabbitmq-0.otus-hw-rabbitmq-headless.otus-hw-volodina.svc.cluster.local'
              valueFrom: null
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10

{
	"info": {
		"_postman_id": "ba091e23-ec3f-4a7e-b2b8-aaa67a470951",
		"name": "otus_hw_9",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21989090"
	},
	"item": [
		{
			"name": "Registration user_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Registration user_1 status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "default"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "email",
							"value": "{{$randomEmail}}",
							"type": "text"
						},
						{
							"key": "first_name",
							"value": "{{$randomFirstName}}",
							"type": "text"
						},
						{
							"key": "last_name",
							"value": "{{$randomLastName}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						},
						{
							"key": "password1",
							"value": "password",
							"type": "text"
						},
						{
							"key": "phone",
							"value": "{{$randomPhoneNumber}}",
							"type": "text"
						},
						{
							"key": "username",
							"value": "user_1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/registration",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"registration"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login user_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Login user_1 success\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "user_1",
							"type": "text"
						},
						{
							"key": "password",
							"value": "password",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user in Pyment Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check user in Pyment Service\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.debit).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/payment/user/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Put money for user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create order 1 status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Idempotency-Key",
						"value": "657567567567567567657",
						"type": "text"
					},
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"money\": 200000\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/payment/put/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"put",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user in Pyment Service after put",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check user in Pyment Service\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.debit).to.eql(200000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/payment/user/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create order 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create order 1 status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"created\");",
							"    pm.collectionVariables.set(\"order_id\", responseJson[\"id\"])",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Idempotency-Key",
						"value": "676576576576576jhjhg",
						"type": "text"
					},
					{
						"key": "x-user_id",
						"value": "5",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"count\": 1,\n    \"hotel_id\": 1,\n    \"flight_id\": 2,\n    \"country_id\": 1,\n    \"date_from\": \"2023-01-31\",\n    \"date_to\": \"2023-02-10\",\n    \"price\": 100000\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/create_order",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"create_order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 1 in Order Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 1 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"pyment_accept\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/order/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 1 in Hotel Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 1 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"accept\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/hotel/order/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hotel",
						"order",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 1 in Ticket Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 1 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"accept\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/ticket/order/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ticket",
						"order",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 1 in Notify Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 1 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(\"Response body: \", pm.response.json())",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/notify/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notify",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user in Pyment Service after Order 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check user in Pyment Service after order 1\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.debit).to.eql(100000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/payment/user/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create order 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Create order 2 status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.status).to.eql(\"created\");",
							"    var order_id = pm.collectionVariables.get(\"order_id\");",
							"    pm.expect(responseJson.id).not.eql(order_id);",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.collectionVariables.set(\"order_id\", responseJson[\"id\"])",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Idempotency-Key",
						"value": "hrytrytyrtytryggg76546",
						"type": "text"
					},
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"count\": 2,\n    \"hotel_id\": 21,\n    \"flight_id\": 12,\n    \"country_id\": 1,\n    \"date_from\": \"2023-07-31\",\n    \"date_to\": \"2023-08-10\",\n    \"price\": 250000\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/create_order",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"create_order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 2 in Order Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 2 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"canceled\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/order/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 2 in Hotel Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 2 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"canceled\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/hotel/order/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"hotel",
						"order",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 2 in Ticket Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 2 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.status).to.eql(\"canceled\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/ticket/order/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ticket",
						"order",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check order 2 in Notify Service",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order 2 status\", function () {",
							"    pm.response.to.have.status(200);",
							"    console.log(\"Response body: \", pm.response.json())",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/notify/{{order_id}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notify",
						"{{order_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check user in Pyment Service after Order 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check user in Pyment Service after order 2\", function () {",
							"    pm.response.to.have.status(200);",
							"    const responseJson = pm.response.json();",
							"    console.log(\"Response body: \", pm.response.json())",
							"    pm.expect(responseJson.debit).to.eql(100000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-user_id",
						"value": "1",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/payment/user/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"payment",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user_1",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/delete",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						"delete"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout user_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Logout user1\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.text()).to.include(\"bye!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "poleteli.com",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": ""
		}
	]
}